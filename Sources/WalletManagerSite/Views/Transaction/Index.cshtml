@model IEnumerable<WalletManagerSite.Models.TransactionViewModel>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<h2>@Localizer["Title"]</h2>

@{
    if (!string.IsNullOrWhiteSpace(ViewBag.Error))
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Error
        </div>
    }

    if (TempData.ContainsKey("Success"))
    {
        <div class="alert alert-success" role="alert">
            @TempData["Success"].ToString()
        </div>
    }
}

<div class="container">
    <form method="post" enctype="multipart/form-data">
        <div id="dropZone" class="dropZone">
            Drag-n-Drop files here.
        </div>
        <br />
        <img id="progress" src="~/images/progress.gif" />
    </form>
</div>
<style>
    #dropZone {
        background: #0094ff;
        height: 100px;
    }

    .active-drop {
        background: #4cff00
    }

    #chart_div {
        height: 300px;
    }
</style>

<div class="container">
    <div id="chart_div"</div>
</div>

@Html.ActionLink(Localizer["Save"].Value, "Save", "Transaction", null, new { @class = "btn btn-primary" })

<div id="transactionsTable">
    @{
        Html.RenderPartial("TransactionsTablePartialView", Model);
    }
</div>

@Html.ActionLink(Localizer["Save"].Value, "Save", "Transaction", null, new { @class = "btn btn-primary" })

@section Scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        function UpdateCategory(select, reference) {
            var data = { categoryName: select.value, reference: reference };
            $.post('@Url.Action("UpdateCategory")', data, function (response) {
                if (response == true) {
                    alert('Success the category name is updated');
                }
                else {
                    alert('Error when update category name');
                }
            });
            
            return false;
        }

        google.charts.load('current', {
            packages: ['corechart']
        });
        google.charts.setOnLoadCallback(LoadTransactionsChart);

        function LoadTransactionsChart() {
            $.ajax({
                url: 'transaction/TransactionChart',
                dataType: "json",
                type: "GET",
                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    toastr.error(err.message);
                },
                success: function (data) {
                    TransactionsChart(data);
                    return false;
                }
            });
            return false;
        }

        function TransactionsChart(data) {
            var dataArray = [
                ['Category', 'Amount']
            ];
            $.each(data, function (i, item) {
                dataArray.push([item.category, item.amount]);
            });
            var data = google.visualization.arrayToDataTable(dataArray);
            var options = {
              title: 'Repartition par catégorie',
              pieHole: 0.4,
            }
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));

            chart.draw(data, options);
            return false;
        }

        function LoadTransactionsTable() {
            $("#transactionsTable").load('@Url.Action("LoadTransactionsTable")');
            return false;
        }

        $(document).ready(function () {

            $("#progress").hide();

            $("#dropZone").on("dragenter", function (evt) {
                $("#dropZone").addClass("active-drop");
                evt.preventDefault();
                evt.stopPropagation();
            });

            $("#dropZone").on("dragover", function (evt) {
                $("#dropZone").removeClass("active-drop");
                evt.preventDefault();
                evt.stopPropagation();
            });

            $("#dropZone").on("drop", function (evt) {
                evt.preventDefault();
                evt.stopPropagation();
                var files = evt.originalEvent.dataTransfer.files;
                var fileNames = "";
                if (files.length > 0) {
                    fileNames += "Uploading <br/>"
                    for (var i = 0; i < files.length; i++) {
                        fileNames += files[i].name + "<br />";
                    }
                }
                $("#dropZone").html(fileNames)

                var data = new FormData();
                for (var i = 0; i < files.length; i++) {
                    data.append(files[i].name, files[i]);
                }
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("LoadTransactions")',
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (message) {
                        $("#dropZone").html(message);
                    },
                    error: function () {
                        $("#dropZone").html
                            ("There was error uploading files!");
                    },
                    beforeSend: function () {
                        $("#progress").show();
                    },
                    complete: function () {
                        $("#progress").hide();
                        LoadTransactionsChart();
                        LoadTransactionsTable();
                    }
                });
            });
        });
    </script>
}
